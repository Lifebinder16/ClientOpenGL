#version 330
// версия OpenGL

// фрагментный шейдер вычисляет цвета

out vec4 color;

// принимаем от вершинного шейдера цвет
// название и тип переменной здесь должны совпадать с названием и типом её в вершинном шейдере
in vec3 pass_color;

// принимаем как переменную "animation"
// мы будем её использовать для задания яркости в зависимости от текущего кадра
uniform float animation;

void main() {
  // преобразование в vec4 (был rgb, стал rgba)
  color = vec4(pass_color * animation, 1); // rgb (pass_color), a (1) 
}